controller:
  adminSecret: true
  adminUser: admin
  adminPassword: "Admin123"
  numExecutors: 0
  installPlugins:
    - configuration-as-code:latest
    - kubernetes:latest
    - workflow-aggregator:latest
    - workflow-job:latest
    - credentials-binding:latest
    - git:latest
    - git-client:latest
    - git-server:latest
    - greenballs:latest
    - blueocean:latest
    - strict-crumb-issuer:latest
    - http_request:latest
    - matrix-project:latest
    - jquery:latest
    - artifactory:latest
    - jdk-tool:latest
    - matrix-auth:latest
    - credentials:latest
    - pipeline-utility-steps:latest
    - docker-workflow:latest
    - command-launcher:latest
    - github-branch-source:latest
  overwritePlugins: true

  healthProbes: true
  probes:
    startupProbe:
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 12
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use "initialDelaySeconds" instead.
      # It delays the initial liveness probe while Jenkins is starting
      initialDelaySeconds: 300
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use "initialDelaySeconds" instead.
      # It delays the initial readyness probe while Jenkins is starting
      initialDelaySeconds: 300
persistence:
  enabled: true
  storageClass: ""
  annotations: {}
  accessMode: "ReadWriteOnce"
  size: "5Gi"
  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true
agent:
  enabled: true
  image: "jenkins/jnlp-agent-docker"
  tag: "latest"
  runAsUser: 0
  runAsGroup: 0
  volumes: 
   - type: HostPath
     hostPath: /var/run/docker.sock
     mountPath: /var/run/docker.sock
   - type: HostPath
     hostPath: /usr/bin/docker
     mountPath: /usr/bin/docker